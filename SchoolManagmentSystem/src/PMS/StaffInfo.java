/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PMS;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author czc02153s3d
 */
public class StaffInfo extends javax.swing.JFrame {
//declaire sql varibles

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet result = null;

    protected void reset() {
        staffID.setText("");

    }

    public StaffInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        staffID = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchStaffTable = new javax.swing.JTable();
        cancelBtn = new javax.swing.JButton();
        searchAllBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PMS - Staff Search");
        setLocation(new java.awt.Point(100, 50));

        jLabel1.setText("Staff ID");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Search staff by entering staff ID");

        searchStaffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Staff ID", "Gender", "First Name", "Last Name", "Mobile", "E-Mail", "Address", "Date Of Join", "Position"
            }
        ));
        searchStaffTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchStaffTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(searchStaffTable);

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        searchAllBtn.setText("Show All");
        searchAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAllBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(staffID, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchBtn)
                                .addGap(31, 31, 31)
                                .addComponent(searchAllBtn)
                                .addGap(26, 26, 26)
                                .addComponent(cancelBtn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jLabel2))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(searchBtn)
                    .addComponent(cancelBtn)
                    .addComponent(searchAllBtn))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.dispose();
        AddStaff staff = new AddStaff();
        staff.setVisible(true);

    }//GEN-LAST:event_cancelBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed

        if (staffID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill all requered fields!");
        } else {

            try {
                con = Connect.connect();
                //checking if id is exist
                String checkId = "SELECT staff_id FROM staff WHERE staff_id='" + staffID.getText() + "'";

                pst = con.prepareStatement(checkId);
                result = pst.executeQuery();
                if (!result.next()) {
                    JOptionPane.showMessageDialog(null, "Staff ID not exists!");
                    return;
                }

                //showing staff info
                String staffInfo = "SELECT * FROM staff WHERE staff_id='" + staffID.getText() + "' ";
                pst = con.prepareStatement(staffInfo);
                result = pst.executeQuery();
                searchStaffTable.setModel(DbUtils.resultSetToTableModel(result));

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(StaffInfo.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        reset();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void searchStaffTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchStaffTableMouseClicked

        int r = searchStaffTable.getSelectedRow();
        String n = searchStaffTable.getModel().getValueAt(r, 0).toString();

        try {
            //connect db
            con = Connect.connect();
            String getTableData = "SELECT * FROM staff WHERE staff_id='" + n + "' ";
            pst = con.prepareStatement(getTableData);
            result = pst.executeQuery();

            if (result.next()) {
                this.dispose();
                AddStaff staff = new AddStaff();
                staff.setVisible(true);

                String id = result.getString("staff_id");
                staff.staffID.setText(id);

                String gender = result.getString("gender");
                staff.staffGender.setSelectedItem(gender);

                String firstName = result.getString("first_name");
                staff.staffFirstName.setText(firstName);

                String lastName = result.getString("last_name");
                staff.staffLastName.setText(lastName);

                String mobile = result.getString("mobile");
                staff.staffMobile.setText(mobile);

                String email = result.getString("email");
                staff.staffEmail.setText(email);

                String address = result.getString("address");
                staff.staffAddress.setText(address);

                String dateOfJoin = result.getString("date_of_join");
                staff.dateOfJoinStaffInfo.setText(dateOfJoin);

                String position = result.getString("position");
                staff.staffSpecialization.setSelectedItem(position);

                byte[] bb = result.getBytes("image");
                ImageIcon icon = new ImageIcon(bb);
                staff.lImage.setIcon(icon);

            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StaffInfo.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_searchStaffTableMouseClicked

    private void searchAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAllBtnActionPerformed

        try {
            con = Connect.connect();
            //showing staff info
            String staffInfo = "SELECT * FROM staff ";
            pst = con.prepareStatement(staffInfo);
            result = pst.executeQuery();
            searchStaffTable.setModel(DbUtils.resultSetToTableModel(result));

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StaffInfo.class.getName()).log(Level.SEVERE, null, ex);
        }

        reset();
    }//GEN-LAST:event_searchAllBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StaffInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchAllBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTable searchStaffTable;
    private javax.swing.JTextField staffID;
    // End of variables declaration//GEN-END:variables
}
